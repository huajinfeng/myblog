import{_ as a,p as n,q as s,Y as e}from"./framework-faa23c95.js";const t={},l=e(`<h2 id="_1-关键字" tabindex="-1"><a class="header-anchor" href="#_1-关键字" aria-hidden="true">#</a> 1.关键字</h2><ul><li>定义：被Java语言赋予了特殊含义，用作专门用途的字符串（或单词）</li><li>特点：全部关键字都是小写字母</li></ul><h2 id="_2-标识符" tabindex="-1"><a class="header-anchor" href="#_2-标识符" aria-hidden="true">#</a> 2.标识符</h2><p>Java中变量、方法、类等要素命名时使用的字符序列，称为标识符</p><p>凡是自己可以起名字的地方都叫标识符。比如：类名、方法名、包名、常量名等。</p><h2 id="_3-变量" tabindex="-1"><a class="header-anchor" href="#_3-变量" aria-hidden="true">#</a> 3.变量</h2><ul><li>变量的概念： 内存中的一个存储区域，该区域的数据可以在同一类型范围内不断变化。 变量构成的三个要素：数据类型、变量名、存储的值。 Java中变量声明的格式：数据类型 变量名 = 变量值。</li></ul><h3 id="基本数据类型介绍" tabindex="-1"><a class="header-anchor" href="#基本数据类型介绍" aria-hidden="true">#</a> 基本数据类型介绍</h3><h4 id="整数类型-byte、short、int、long" tabindex="-1"><a class="header-anchor" href="#整数类型-byte、short、int、long" aria-hidden="true">#</a> 整数类型：byte、short、int、long</h4><table><thead><tr><th>类型</th><th>占用存储空间</th><th>表数范围</th></tr></thead><tbody><tr><td>byte</td><td>1字节 = 8bit</td><td>-128~127</td></tr><tr><td>short</td><td>2字节</td><td>-2^15~2^15-1</td></tr><tr><td>int</td><td>4字节</td><td>-2^-31~2^31-1</td></tr><tr><td>long</td><td>8字节</td><td>-2^63~2^63-1</td></tr></tbody></table><ul><li>定义long类型的变量，赋值时需要以“L”或“l”作为后缀</li><li>Java程序中变量通常声明为int型</li><li>Java的整型常亮默认为int型</li></ul><h4 id="浮点类型-float、double" tabindex="-1"><a class="header-anchor" href="#浮点类型-float、double" aria-hidden="true">#</a> 浮点类型：float、double</h4><ul><li>单精度float：尾数可以精确到7位有效数字，很多情况下很难满足需求。定义float类型的变量时，赋值时需要以“F”或“f”作为后缀。</li><li>双精度double：精度是float的两倍。通常采用此类型。</li><li>Java的浮点型常量默认为double型</li></ul><p>浮点类型精度不高，在开发中需要极高的精度，需要使用BigDecimal类。</p><h4 id="字符类型-char" tabindex="-1"><a class="header-anchor" href="#字符类型-char" aria-hidden="true">#</a> 字符类型：char</h4><ul><li><p>char型数据用来表示通常意义上“字符”（占2字节）</p></li><li><p>Java中的所有字符都使用Unicode编码，故一个字符可以存储一个字母，一个汉字，或其他书面语的一个字符</p></li><li><p>字符型变量的三种表现形式：</p><p>形式1：使用单引号（&#39; &#39;）括起来的单个字符（必须有且仅有一个字符，没有字符也不行）</p><p>形式2：直接使用Unicode值来表示字符型常量：‘\\uXXXX’,其中XXXX表示一个十六进制数</p><p>形式3：Java中还允许使用转义字符，&#39;\\n&#39;,&#39;\\t&#39;</p><p>形式4：ASCII码</p></li></ul><h4 id="布尔类型-boolean-true、false" tabindex="-1"><a class="header-anchor" href="#布尔类型-boolean-true、false" aria-hidden="true">#</a> 布尔类型：boolean：true、false</h4><ul><li>常使用在流程控制语句中。比如：条件判断、循环结构</li></ul><h4 id="基本数据类型变量间的自动类型提升" tabindex="-1"><a class="header-anchor" href="#基本数据类型变量间的自动类型提升" aria-hidden="true">#</a> 基本数据类型变量间的自动类型提升</h4><ul><li>可以做运算的基本数据类型有7中，不包含boolean类型</li><li>运算规则包括： 1.自动类型提升 2.强制类型转换</li></ul><h5 id="自动类型提升" tabindex="-1"><a class="header-anchor" href="#自动类型提升" aria-hidden="true">#</a> 自动类型提升</h5><ul><li><p>规则：当容量小的变量与容量大的变量做运算时，结果自动转换为容量大的数据类型。</p><p>byte、short 、char--&gt; int --&gt; long --&gt; float --&gt;double 特殊的情况1：byte、short、char类型的变量之间做运算，结果为int类型</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">byte</span> b3 <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>
<span class="token keyword">short</span> s1 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> i3 <span class="token operator">=</span> b3 <span class="token operator">+</span> s1<span class="token punctuation">;</span>

<span class="token keyword">char</span> c1 <span class="token operator">=</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> i4 <span class="token operator">=</span> c1 <span class="token operator">+</span> b3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>练习：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">long</span> l1 <span class="token operator">=</span> <span class="token number">123123123123L</span><span class="token punctuation">;</span><span class="token comment">//此时的123123123123就是使用了8个字节存储的long类型</span>
<span class="token keyword">long</span> l2 <span class="token operator">=</span> <span class="token number">123132123123</span><span class="token punctuation">;</span><span class="token comment">//理解为：自动类型提升(int --&gt; long)，此时的123123123123理解为int类型，因为超出了int范围，所以报错</span>

<span class="token keyword">float</span> f2 <span class="token operator">=</span> <span class="token number">12.3f</span><span class="token punctuation">;</span>
<span class="token keyword">float</span> f3 <span class="token operator">=</span> <span class="token number">12.3</span><span class="token punctuation">;</span><span class="token comment">//此时的12.3理解为double类型，不满足自动类型提升的规则，所以报错</span>

<span class="token comment">//规定1：整型常量，规定是int类型</span>
<span class="token keyword">byte</span> b5 <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> ii1 <span class="token operator">=</span> b5 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token comment">//规定2：浮点型常量，规定是double类型</span>
<span class="token keyword">double</span> dd1 <span class="token operator">=</span> b5 <span class="token operator">+</span><span class="token number">12.3</span><span class="token punctuation">;</span>

<span class="token comment">//为什么变量名不能是数字开头</span>
<span class="token keyword">int</span> <span class="token number">123L</span> <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>
<span class="token keyword">long</span> <span class="token number">16</span> <span class="token operator">=</span> <span class="token number">123L</span><span class="token punctuation">;</span> <span class="token comment">//如果变量名以数字开头，这里的123L是常量123还是变量123L，就会矛盾</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>说明：此时的容量小或大，并非指占用的内存空间的大小，而是指数据的范围的大小</p></li></ul>`,22),o=[l];function i(p,r){return n(),s("div",null,o)}const c=a(t,[["render",i],["__file","2.bianliangyuyunsuanfu.html.vue"]]);export{c as default};
